#-----------------------------------------------------------------------------------------------------------
# == JDK Logging 配置文件 ==
#Level的等级,从高到低
# SEVERE
# WARNING
# INFO
# CONFIG
# FINE
# FINER
# FINEST
# ALL
# OFF
#-----------------------------------------------------------------------------------------------------------

# 日志格式
#java.util.logging.SimpleFormatter.format=%4$s: %5$s [%1$tc]%n
java.util.logging.SimpleFormatter.format=%1$tF %1$tH:%1$tM:%1$tS %2$s%n%4$s: %5$s%6$s%n

#指定Root Logger级别，要大写
.level=ALL
#为 Handler 指定默认的级别（默认为 Level.INFO）。
java.util.logging.ConsoleHandler.level=INFO
# 指定要使用的 Formatter 类的名称（默认为 java.util.logging.SimpleFormatter）。
java.util.logging.ConsoleHandler.formatter=logging.formatter.MySimpleFormatter

# 为 Handler 指定默认的级别（默认为 Level.ALL）。
java.util.logging.FileHandler.level=INFO
# 指定要使用的 Formatter 类的名称（默认为 java.util.logging.XMLFormatter）。
java.util.logging.FileHandler.formatter=java.util.logging.SimpleFormatter
# 指定要写入到任意文件的近似最大量（以字节为单位）。如果该数为 0，则没有限制（默认为无限制）。
java.util.logging.FileHandler.limit=1024000
# 指定有多少输出文件参与循环（默认为 1）。
java.util.logging.FileHandler.count=1
# 为生成的输出文件名称指定一个模式。有关细节请参见以下内容（默认为 "%h/java%u.log"）。
java.util.logging.FileHandler.pattern=export-excel.log
# 指定是否应该将 FileHandler 追加到任何现有文件上（默认为 false）。
java.util.logging.FileHandler.append=false

# 执行的LogHandler，使用逗号隔开
handlers=java.util.logging.ConsoleHandler,java.util.logging.FileHandler
#handlers= java.util.logging.ConsoleHandler